<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
       xsi:schemaLocation="
          http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
          http://www.springframework.org/schema/tx
          http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
          http://www.springframework.org/schema/context
          http://www.springframework.org/schema/context/spring-context-3.2.xsd
          http://www.springframework.org/schema/aop
          http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
          http://mybatis.org/schema/mybatis-spring
          http://mybatis.org/schema/mybatis-spring.xsd"
       default-autowire="byName">
    <!--隐式地向 Spring容器注册,激活那些已经在spring容器里注册过的bean
    http://www.cnblogs.com/leiOOlei/p/3713989.html
    -->
    <context:annotation-config/>
    <!--spring aop-->
    <aop:aspectj-autoproxy/>

    <context:property-placeholder location="classpath:jdbc.properties"/>


    <!--阿里巴巴druid缓冲池添加-start-->
<!--    <bean id= "dataSource" class = "com.alibaba.druid.pool.DruidDataSource" init-method ="init" destroy-method= "close" >
        &lt;!&ndash; 基本属性 url、user、password &ndash;&gt;
        <property name= "url" value ="${jdbc_url}" />
        <property name= "username" value ="${jdbc_username}" />
        <property name= "password" value ="${jdbc_password}" />

        &lt;!&ndash; 配置初始化大小、最小、最大 &ndash;&gt;
        <property name= "initialSize" value ="1" />
        <property name= "minIdle" value ="1" />
        <property name= "maxActive" value ="20" />

        &lt;!&ndash; 配置获取连接等待超时的时间 &ndash;&gt;
        <property name= "maxWait" value ="60000" />

        &lt;!&ndash; 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 &ndash;&gt;
        <property name= "timeBetweenEvictionRunsMillis" value = "60000" />

        &lt;!&ndash; 配置一个连接在池中最小生存的时间，单位是毫秒 &ndash;&gt;
        <property name= "minEvictableIdleTimeMillis" value = "300000" />

        <property name= "validationQuery" value ="SELECT 'x'" />
        <property name= "testWhileIdle" value ="true" />
        <property name= "testOnBorrow" value ="false" />
        <property name= "testOnReturn" value ="false" />

        &lt;!&ndash; 打开PSCache，并且指定每个连接上PSCache的大小 &ndash;&gt;
        <property name= "poolPreparedStatements" value = "true" />
        <property name= "maxPoolPreparedStatementPerConnectionSize" value ="20" />

        &lt;!&ndash; 配置监控统计拦截的filters，去掉后监控界面 sql无法统计 &ndash;&gt;
        <property name= "filters" value ="stat" />
    </bean>-->
    <!--阿里巴巴druid缓冲池添加-end-->

    <bean id="dataSource" destroy-method="close"
          class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${jdbc_driverClassName}" />
        <property name="url" value="${jdbc_url}" />
        <property name="username" value="${jdbc_username}" />
        <property name="password" value="${jdbc_password}" />
        <!--<property name="validationQuery" value="select 1"></property>-->
        <property name="validationQuery" value="select sysdate from dual"> </property>
        <property name="initialSize" value="10"/>
        <!--maxActive: 最大连接数量 0代表无限制-->
        <property name="maxActive" value="2000"/>
        <!--maxIdle: 最大空闲连接-->
        <property name="maxIdle" value="200"/>
        <!--minIdle: 最小空闲连接-->
        <property name="minIdle" value="5"/>

        <property name="testWhileIdle" value="true"/>
        <!--maxWait: 超时等待时间以毫秒为单位 1000等于60秒-->
        <property name="maxWait" value="1000"/>
    </bean>


    <!--
     define the SqlSessionFactory, notice that configLocation is not needed when you use MapperFactoryBean
    -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
    </bean>

    <!--mybatis扫描的包-->
    <mybatis:scan base-package="com.huaru.mapper"/>

    <!--start of log4jdbc,SQL调试日志框架-->
    <bean id="log4jdbcInterceptor" class="net.sf.log4jdbc.DataSourceSpyInterceptor"/>
    <bean id="dataSourceLog4jdbcAutoProxyCreator"
          class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
        <property name="interceptorNames">
            <list>
                <value>log4jdbcInterceptor</value>
            </list>
        </property>
        <property name="beanNames">
            <list>
                <value>dataSource</value>
            </list>
        </property>
    </bean>
    <!--end of log4jdbc,SQL调试日志框架-->

    <!-- transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 自动扫描组件，需要把controller去掉，否则影响事务管理 -->
    <context:component-scan base-package="com.huaru">
        <context:exclude-filter type="regex" expression="com.huaru.controller.*"/>
    </context:component-scan>

    <!--邮件服务-->
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <!-- 服务器 -->
        <property name="host" value="smtp.qq.com"/>
        <!-- 端口号 -->
        <property name="port" value="25"/>
        <!-- 用户名 发信的邮箱 -->
        <property name="username" value="470969043@qq.com"/>
        <!--  密码   -->
        <property name="password" value="laodong@88999"/>
        <!-- SMTP服务器验证 -->
        <property name="javaMailProperties">
            <props>
                <!-- 验证身份 -->
                <prop key="mail.smtp.auth">true</prop>
            </props>
        </property>
    </bean>
    <!--
       目前我用过的EMAIL账号都是网易的,下面列出网易的SMTP服务器名和端口号:
        网易邮箱          SMTP服务器     SMTP端口     POP3服务器       POP3端口
        @126.com     smtp.126.com      25          pop3.126.com      110
        @163.com     smtp.163.com      25          pop3.163.com      110
        @yeah.net    smtp.yeah.net      25          pop3.yeah.net     110
    -->

    <bean id="simpleMailMessage" class="org.springframework.mail.SimpleMailMessage">
        <!-- 发件人email -->
        <property name="from" value="470969043@qq.com"/>
    </bean>
    <!--html邮件-->
    <bean id="htmlEmail" class="com.huaru.tools.email.SendHtmlEmail">
        <property name="smtpServer" value="smtp.qq.com"> </property>
        <property name="sendFromEmail" value="470969043@qq.com"> </property>
        <property name="sendPassword" value="laodong@888999"> </property>
    </bean>
</beans>


